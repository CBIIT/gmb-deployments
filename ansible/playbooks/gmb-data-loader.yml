---
- name: load data to neo4j db
  hosts: loader
  connection: local
  gather_facts: yes
  become: yes

  tasks:
    #install collections
    - name: install aws collection
      command: ansible-galaxy collection install {{item}}
      loop:
        - community.docker:<=3.4.3
        - amazon.aws:<=5.4.0
        - community.aws:<=3.2.0
        -  git+https://github.com/CBIIT/datacommons-devops.git#/ansible/collections/bento/common/,gmb

    #get db ip
   # - name: get db ip
    #  include_role:
     #   name: bento.common.neo4j_ip
      #vars:
       # tier: "{{ lookup('env','TIER') }}"
        #project_name: popsci
        #database_name: "{{ project_name }}-{{ tier }}-neo4j"

    #load data
    - name: perform data loading
      include_role:
        name: bento.common.data_loader
      vars:
        ansible_python_interpreter: /usr/bin/python3
        workspace: "{{ lookup('env','WORKSPACE') }}"
        project_name:  "{{ lookup('env','PROJECT_NAME') }}"
        tier: "{{ lookup('env','TIER') }}"
        s3_folder: "{{ lookup('env','S3_FOLDER') }}"
        wipe_db:  "{{ lookup('env','WIPE_DB') }}"
        cheat_mode:  "{{ lookup('env','CHEAT_MODE')}}"
        split_transactions:  "{{ lookup('env','SPLIT')}}"
        region: us-east-1
        neo4j_ip: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_ip', nested=true, region='us-east-1' ) }}"
        neo4j_user: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_user', nested=true, region='us-east-1' ) }}"
        neo4j_password: "{{ lookup('amazon.aws.aws_secret', 'bento/{{ project_name }}/{{ tier }}.neo4j_password', nested=true, region='us-east-1' ) }}"
        model_file1: "{{workspace}}/gmb-model/model-desc/000048_Model.yml"
        model_file2: "{{workspace}}/gmb-model/model-desc/000048_Model_Props.yml"
        property_file: "config/props-gmb-mock.yml"
        bucket: bento-gmb-metadata